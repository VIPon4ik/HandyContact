{"version":3,"file":"static/js/38.c6329bcb.chunk.js","mappings":"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","sources":["components/MainForm/MainForm.styled.jsx","components/MainForm/MainForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, TextField } from '@mui/material';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  max-width: 400px;\n  box-shadow: 1px 1px 4px 1px rgba(0, 0, 0, 0.2);\n  padding: 40px 20px;\n  border-radius: 4px;\n  background-color: #fff;\n  margin: 0 auto;\n  margin-top: 120px;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputContainer = styled.div`\n  width: 100%;\n`\n\nexport const StyledInput = styled(TextField)`\n  width: 100%;\n`\n\nexport const CentredTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  text-transform: capitalize;\n  color: rgb(67, 77, 91);\n`;\n\nexport const ErrorMessage = styled.p`\n  margin: 10px 0;\n  color: tomato;\n  \n  &:first-letter {\n    text-transform: capitalize;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  margin-top: 20px;\n`;\n","import React, { useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport {\n  FormContainer,\n  CentredTitle,\n  StyledForm,\n  ErrorMessage,\n  StyledLink,\n  InputContainer,\n  StyledInput,\n} from './MainForm.styled';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst getFieldType = field => {\n  switch (field) {\n    case 'password':\n      return 'password';\n    case 'email':\n      return 'email';\n    case 'number':\n      return 'tel';\n    default:\n      return 'text';\n  }\n};\n\nconst getDefaultValue = (type, defaultName, defaultNumber) => {\n  switch (type) {\n    case 'text':\n      return defaultName;\n    case 'tel':\n      return defaultNumber;\n    default:\n      return '';\n  }\n};\n\nconst MainForm = ({\n  title,\n  handleSubmit,\n  validationSchema,\n  redirectUrl,\n  redirectMessage,\n  defaultName = '',\n  defaultNumber = '',\n}) => {\n  const {\n    register,\n    formState: { isSubmitSuccessful, errors },\n    handleSubmit: handleFormSubmit,\n    reset,\n  } = useForm({ resolver: yupResolver(validationSchema) });\n\n  const fields = Object.keys(validationSchema.fields);\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [reset, isSubmitSuccessful]);\n\n  return (\n    <FormContainer>\n      <CentredTitle>{title}</CentredTitle>\n      <StyledForm onSubmit={handleFormSubmit(handleSubmit)}>\n        {fields.map((field, index) => {\n          const type = getFieldType(field);\n          return (\n            <InputContainer key={field}>\n              <StyledInput\n                type={type}\n                label={`${field.charAt(0).toUpperCase() + field.slice(1)}`}\n                variant=\"outlined\"\n                {...register(field)}\n                defaultValue={getDefaultValue(type, defaultName, defaultNumber)}\n              />\n              <ErrorMessage>{errors[field]?.message}</ErrorMessage>\n            </InputContainer>\n          );\n        })}\n        <Button variant=\"contained\" type=\"submit\" size=\"large\">\n          Confirm\n        </Button>\n        {redirectMessage && (\n          <StyledLink component={RouterLink} to={`/${redirectUrl}`}>\n            {redirectMessage}\n          </StyledLink>\n        )}\n      </StyledForm>\n    </FormContainer>\n  );\n};\n\nexport default MainForm;\n","import React from 'react';\nimport MainForm from 'components/MainForm/MainForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, logIn } from '../redux/operations';\nimport { selectAuthIsLoading } from '../redux/selectors';\nimport Loader from 'components/Loader/Loader';\nimport * as yup from 'yup';\n\nconst schema = yup.object({\n  email: yup.string().email().max(36).required(),\n  password: yup.string().min(8).max(36).required(),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  const handleSubmit = async data => {\n    const email = data.email;\n    const password = data.password;\n\n    await dispatch(logIn({ email, password }));\n    await dispatch(getContacts());\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <MainForm\n        title=\"Sign in\"\n        handleSubmit={handleSubmit}\n        validationSchema={schema}\n        redirectUrl=\"registration\"\n        redirectMessage=\"Don't have an account? Sign up\"\n      />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","StyledForm","_templateObject2","InputContainer","_templateObject3","StyledInput","TextField","_templateObject4","CentredTitle","_templateObject5","ErrorMessage","_templateObject6","StyledLink","Link","_templateObject7","getDefaultValue","type","defaultName","defaultNumber","_ref","title","handleSubmit","validationSchema","redirectUrl","redirectMessage","_ref$defaultName","_ref$defaultNumber","_useForm","useForm","resolver","yupResolver","register","_useForm$formState","formState","isSubmitSuccessful","errors","handleFormSubmit","reset","fields","Object","keys","useEffect","_jsxs","children","_jsx","onSubmit","map","field","index","_errors$field","getFieldType","_objectSpread","label","concat","charAt","toUpperCase","slice","variant","defaultValue","message","Button","size","component","RouterLink","to","schema","yup","email","max","required","password","min","dispatch","useDispatch","isLoading","useSelector","selectAuthIsLoading","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","logIn","getContacts","stop","_x","apply","arguments","_Fragment","Loader","MainForm"],"sourceRoot":""}